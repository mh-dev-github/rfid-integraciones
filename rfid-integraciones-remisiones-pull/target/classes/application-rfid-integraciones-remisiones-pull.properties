#server.database=localhost:1433
#source.database=localhost:1433
server.database=MHAPP01:1433
source.database=cobogapp04:49203

#--------------------------------------------------------------------------------------------------
server.port=9091
datasource.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver

sync.cron=0 */5 * * * ?

spring.datasource.url=jdbc:sqlserver://${server.database};databaseName=RFID;
spring.datasource.username=andsep
spring.datasource.password=andres
spring.datasource.driver-class-name=${datasource.driver}
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false

spring.messages.encoding=ISO-8859-1
spring.messages.fallback-to-system-locale=false

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

logging.level.com.mh=DEBUG
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.com.microsoft.sqlserver.jdbc=ERROR

spring.jmx.enabled = false

#--------------------------------------------------------------------------------------------------
rfid.amqp.flow									=remisiones
rfid.amqp.exchange								=rfid.amqp.PULL

rfid.amqp.queue-extract							=${rfid.amqp.flow}.PULL.EXTRACT
rfid.amqp.queue-transform						=${rfid.amqp.flow}.PULL.TRANSFORM
rfid.amqp.queue-load							=${rfid.amqp.flow}.PULL.LOAD
rfid.amqp.queue-stand-by-load					=${rfid.amqp.flow}.PULL.STAND_BY_LOAD
rfid.amqp.queue-create-message					=${rfid.amqp.flow}.CONVERSION.CREATE_MESSAGE
rfid.amqp.queue-error							=${rfid.amqp.flow}.PULL.ERROR
rfid.amqp.queue-exception						=${rfid.amqp.flow}.PULL.EXCEPTION
rfid.amqp.queue-notification					=notificaciones.NOTIFICATIONS

rfid.amqp.routingkey-extract-rows				=${rfid.amqp.flow}.routingkeyExtractRows
rfid.amqp.routingkey-successful-extraction		=${rfid.amqp.flow}.routingkeySuccessfulExtraction
rfid.amqp.routingkey-extraction-exception		=${rfid.amqp.flow}.routingkeyExtractionException

rfid.amqp.routingkey-successful-transformation	=${rfid.amqp.flow}.routingkeySuccessfulTransformation
rfid.amqp.routingkey-unsuccessful-transformation=${rfid.amqp.flow}.routingkeyUnsuccessfulTransformation
rfid.amqp.routingkey-transformation-exception	=${rfid.amqp.flow}.routingkeyTransformationException

rfid.amqp.routingkey-successful-load			=${rfid.amqp.flow}.routingkeySuccessfulLoad
rfid.amqp.routingkey-load-put-on-standby		=${rfid.amqp.flow}.routingkeyLoadPutOnStandby
rfid.amqp.routingkey-unsuccessful-load			=${rfid.amqp.flow}.routingkeyUnsuccessfulLoad
rfid.amqp.routingkey-load-exception				=${rfid.amqp.flow}.routingkeyLoadException

rfid.amqp.routingkey-notify						=${rfid.amqp.flow}.routingkeyNotify

#--------------------------------------------------------------------------------------------------
source.datasource.url=jdbc:sqlserver://${source.database};databaseName=MARROQUINERA;
source.datasource.username=andsep
source.datasource.password=andres
source.datasource.driver-class-name=${datasource.driver}
source.datasource.testOnBorrow=true
source.datasource.validationQuery=SELECT 1